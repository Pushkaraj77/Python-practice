# Inheritance means taking attributes of one class and using it in another class with additional functions

# When only one class is inherited it is called single inheritance.

class Employee:
    no_of_leaves = 8

    def __init__(self, aname, asalary, arole):
        self.name = aname
        self.salary = asalary
        self.role = arole

    def printdetails(self):
        return f"Name is {self.name}, Salary is {self.salary} and role is {self.role} "

# How to change class attributes outside the class is classmethod

    @classmethod
    def change_leaves(cls, new_leaves):
        cls.no_of_leaves = new_leaves

# class Programmer(Employee) :
#     pass
# Here we made a new class "Programmer" and inherited properties of class "Employee" in it.

class Programmer(Employee) :
    def printprog(self):
        return f"The programmer's name is {self.name} Salary is {self.salary} and role is {self.role}"

harry = Employee("Harry", "455", "Instructor")
rohan = Employee("Rohan", "255", "Student")

karan = Programmer("Karan", "777", "Programmer")

print(karan.printprog())
print(karan.printdetails())
# Here karan took both "prog" and "details"
